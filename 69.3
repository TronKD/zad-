#include <cstdlib>
#include <iostream>
#include <stdio.h>
#include <string>
#include <fstream>
#include <time.h>
using namespace std;


typedef struct{
    int bg;
    int end;
}Gen;
#define ROZ 1000
string genotypes[ROZ];
ofstream out;

string mut="BCDDC";
int ile;

Gen nextGen(string s, int i)
{   int len=s.length();
    Gen pom;
    pom.bg=pom.end=len;

    while (i<len-4 && (s[i]!='A' || s[i+1]!='A'))
        i++;
    if (i>len-4)
        return pom;
    pom.bg=i;
    while (i<len-1 && (s[i]!='B' || s[i+1]!='B'))
        i++;
    if (i==len-1)
        { pom.bg=len; return pom;}
    pom.end=i+1;

    return pom;
}

int ileGenow(string s)
{   Gen pom;
    int len=s.length();

    int i=0;
    int ileg=0;
    while (i<s.length()){
        pom=nextGen(s,i);
        if (pom.bg<len) ileg++;
        i=pom.end+1;
    }
    return ileg;
}

int najdluzszyGen(string s)
{   Gen pom;
    int len=s.length();

    int i=0;
    int maxL=0;
    while (i<s.length()){
        pom=nextGen(s,i);
        if (pom.bg<len)
            if (pom.end-pom.bg+1>maxL)
                maxL=pom.end-pom.bg+1;
        i=pom.end+1;
    }
    return maxL;
}

void zad3(){
    int maxLGenow=0,maxDlGenu=0,i,j, stat[5];
    char z;
    int LGenow, DlGenu;

    for(i=0;i<ile;i++){
        LGenow=ileGenow(genotypes[i]);
        if (LGenow>maxLGenow) maxLGenow=LGenow;
        DlGenu=najdluzszyGen(genotypes[i]);
        if (DlGenu>maxDlGenu)
            maxDlGenu = DlGenu;
    }
        ;
    cout << "Najwieksza liczba genow w genotypie: " << maxLGenow << endl;
    cout << "Najdluzszy gen: " << maxDlGenu << endl;
    out << "Najwieksza liczba genow w genotypie: " << maxLGenow << endl;
    out << "Najdluzszy gen: " << maxDlGenu << endl;
}

int main()
{   long long i;

    srand (time(NULL));
	ifstream in;
	in.open("dane_geny.txt");
	out.open("wyniki_geny.txt");

    ile=ROZ;
    for(i=0;i<ile;i++){
        in >> genotypes[i];
    }

    zad3();
    out.close();
    return 0;
}
